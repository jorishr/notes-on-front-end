
################
GENERATING LISTS
################

Map over the array of data and for each value in the arr generate an <li>. The method is stored in a variable and passed into the parent component which is the <ul>.

function NumberList(props) {
  const numbers = props.numbers;
  const listItems = numbers.map((number) =>
    <li>{number}</li>
  );
  return (
    <ul>{listItems}</ul>
  );
}

const numbers = [1, 2, 3, 4, 5];
ReactDOM.render(
  <NumberList numbers={numbers} />,
  document.getElementById('root')
);

KEYS

A “key” is a special string attribute you need to include when creating lists of elements. 

  const listItems = numbers.map((number) =>
    <li key={uuid()}>{number}</li>
  );

When you don’t have stable IDs for rendered items, you may use the item index in the arr.

  const listItems = numbers.map((number) =>
    <li key={index}>{number}</li>
  );

Keys help React identify which items have changed, are added, or are removed. Keys should be given to the elements inside the array to give the elements a stable identity.

Keys used within arrays should be unique among their siblings. However they don’t need to be globally unique.

A good rule of thumb is that elements inside the map() call need keys.


