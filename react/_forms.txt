######
FORMS
######

In HTML, form elements such as <input>, <textarea>, and <select> typically maintain their own state and update it based on user input.
 
In React, mutable state is typically kept in the state property of components, and only updated with setState().

It is best to make the React state be the “single source of truth”. Thus, the React component that renders a form also controls what happens in that form on subsequent user input. This is called a “controlled component”.

With a controlled component, every state mutation will have an associated handler function. This makes it straightforward to modify or validate user input.

SUBMIT

When the INPUT is part as a form, there should NOT be a onClick={handler} on the submit button. 

Instead you a onSubmit={handler} on the FORM element!


########
TEXTAREA
########

In React a textarea behaves as an input element with a value attribute. Not the text you may write between the opening and closing tags. Thus:
	<textarea value={...}/>

######
SELECT
######

One of the option elements inside the select tags can have a SELECTED attribute. In React, however, there is a value attribute controlled by the STATE on the SELECT tag.

      <form onSubmit={this.handleSubmit}>
        <label>
          Pick your favorite flavor:
          <select value={this.state.value}onChange={...}>
            <option value="grapefruit">Grapefruit</option>
            <option value="lime">Lime</option>
            <option value="coconut">Coconut</option>
            <option value="mango">Mango</option>
          </select>
        </label>
        <input type="submit" value="Submit" />
      </form>
