/*
	#######
	DISPLAY
	##############
    #   1.  BLOCK
    #   2.  INLINE
    #   3.  NONE
    ##############

	1.  BLOCK

	Voor block elementen is default display: block; Een default block element
	wordt steeds gevolgd door een line break en neemt dus volledige horizontale
	ruimte in op de pagina of the containing div.

	2.  INLINE

	Voor in-line elementen: span, a, img, canvas etc. Display:in-line betekent 
	dat ze een kleine lijnhoogte krijgen toegevoegd onderaan die ruimte laat 
	voor de letters in het alfabet die uitlopen zoals 'g'. 
	
	Daarom gebruiken we voor een IMAGE GALLERY <img> met display: block; zodat
	ze netjs op elkaar kunnen aansluiten.

	Als je een canvas element de hele hoogte van de pagina laat innemen krijg
	je een 1px tussen body en html. Ook dit los je op met display:block OF via
	vertical-align: top; The default vertical-align value is baseline, which 
	is why the element is being aligned to the bottom (resulting in a 
	scrollbar).

	BLOCK TO INLINE-BLOCK

	Maak je een block tot in-line dan worden je marges en padding gewijzigd
	om het blok op een lijn te krijgen, maar die marges en padding blijven 
	wel gerespecteerd, in tegenstelling tot display: inline;

	Het kan soms nuttig zijn om block-level elementen zoals <li>'s op één lijn
	te krijgen. Dit kan met FLOATS maar dan moet je CLEAREN op het niveau van 
	de parent (<ul>). 

	Met display: inline-block krijg je hetzelfde effect: block-level elementen
	op één lijn maar zonder line-break. Dit is handig voor bijvoorbeeld 
	horizontale menu's.

	Vergeleken met display: inline kan je met inline-block wel een width and 
	height instellen 

	3.  DISPLAY NONE AND VISIBILITY

	Display:none betekent dat het element niet zichtbaar is EN niet gerendered
	wordt. Er wordt dus geen ruimte voor voorzien op de pagina.
	
	Je kan wel interageren met het element via de DOM en bijvoorbeeld JS 
	gebruiken om een div blok dat verborgen is zichtbaar te maken na een klik
	event. Een ander voorbeeld is de <script> tag, die heeft default waarde 
	display:none; en is dus niet zichbaar op de pagina maar is wel deel van de 
	DOM.

	Visbility:hidden; daarentegen wordt wel gerendered en er wordt dus ruimte 
	voor voorzien op de pagina. De ruimte die het normaal zou innemen wanneer 
	het element zichtbaar zou zijn blijft dus gereserveerd.
*/