###############
PSEUDO ELEMENTS
###################################################
I.	ABOUT
II.	HOW IT WORKS
III.	USE CASES
	A.	BADGES
	B.	TEXT QUOTATIONS
	C.	EXTERNAL LINK ICONS IN TEXT
	D.	EXPAND CLICKABLE AREA
	E.	CUSTOM UNDERLINE FOR HEADINGS/TEXT-LINKS
###################################################

###########
I.	ABOUT
###########

Pseudo elements are used to add content before or after the CONTENT of other elements without changing your HTML markup very much. 

IMPORTANT: the pseudo element is part of the containing element, but come before or after the content of that element. You can check that in the console.

NOTE: 
- pseudo elements won't work on image elements.
- use double colons. Single colons are for pseudo classes, like :hover. 


##################
II.	HOW IT WORKS
##################

By itself adding a pseudo element to an existing class does not nothing: thus p::before { color: green; } will not be visibile. 

You need to add a CONTENT property. That content can be empty. 

Here we create a small green square that will be inserted just INSIDE the containing element and just BEFORE the containing element CONTENT.

	p::before {
		content: '';
		background-color:green;
		display: block;
		width: 50px;
		height: 50px;
	}

###############
III.	USE CASES
###############

	A.	BADGES

Add pseudo element after a title, with content: 'NEW' as a BADGE (similar to bootstrap badges).

	B.	QUOTATIONS

Add quotation marks to a paragraph or title:
	::before {content: 'open-quote'}
	::after {content: 'close-quote'}

	C.	EXTERNAL LINK ICONS IN TEXT (with fontawesome)

Select the <a> tags with href="http" attribute:
	
	a[href^="http"]::after {
		font-family: 'Font Awesome 5 Free';
		content: '\f35d';
		font-weight: 900;
		font-size: .8em;
	}

The content refers to the font awesome icon identifier.
	
	D.	EXPAND CLICKABLE AREA

Set the button or element to position: relative; The width and height are for the expanded area. The positioning as you see fit.

	button:before {
		content: ' ';
		position: absolute;
		top: -35px;
		left: -35px;
		width: 140px; 
		height: 140px;
	}

	E.	CUSTOM UNDERLINE FOR HEADINGS/TEXT LINKS

SEE CODEPEN FOR EXAMPLES

Add ::before and set the width to a percentage of the heading, the height in pixels will give you a line. The content is empty.

Important is the z-index as the underline may overlap the y or j. Use inline-block to better control the dimensions of the pseudo-element.

	h2 {position: relative; z-index: 1; display: inline-block;}

h2::before {
    content: '';
    position: absolute;
    left: -.05em;
    bottom: -.15em;
    z-index: -1;
    width: 35%;
    height: 5px;
    border-radius: 25%;
    background: red;
}

ANIMATION

You can start with an underline that is only 50% of the width and use transform: scaleX(1); to fully expand on :hover. Or the have it shrink to half the width on :hover.

Use the transform-origin property to play around for the best effect.

h2:hover::before {
  transform: scaleX(.5);
}

MULTILINE UNDERLINE

This is not possible with a pseudo element. What you can do is use a background-image: linear-gradient(transparent 50%, <color> 10%) and background-repeat: no-repeat; background-size: 100% 100%;

Especially the background-size is what fills the gradient out along the multiple lines. You can animate it to go from 0 to 100, for example.
