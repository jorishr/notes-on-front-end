#####################################
BASIC PASSWORD VALIDATION (FRONT END)
#####################################
I.	THE LOGIC
II.	HTML MARKUP
III.	MESSAGE/INSTRUCTIONS TO USER
IV.	BASIC CONDITIONS
#####################################

###############
I.	THE LOGIC
###############

- set of conditions
- when user clicks on the pw field: show the conditions, when out of focus, hide instructions
- when user types, store the value in a variable, if the variable value matches one of the conditions, change the style/color of that condition in the instructions

#################
II.	HTML MARKUP
#################

Set the regex of all the combined conditions in the PATTERN attribute.

Add the written instructions also to the TITLE attribute.

<input type="password" id="psw" name="psw" 
	 pattern="(?=.*\d)(?=.*[a-z])(?=.*[A-Z]).{8,}"
       title="Must contain at least one number and one 	uppercase and lowercase letter, and at least 8 or more 	characters" 
	required>

##################################
III.	MESSAGE/INSTRUCTIONS TO USER
##################################

Below or above add a MESSAGE container with the instructions:

<div id="message">
  <h3>Password must contain the following:</h3>
  <p id="letter" class="invalid">A <b>lowercase</b> letter</p>
  <p id="capital" class="invalid">A <b>capital (uppercase)</b> letter</p>
  <p id="number" class="invalid">A <b>number</b></p>
  <p id="length" class="invalid">Minimum <b>8 characters</b></p>
</div>	

With JS and a CSS class .valid you turn those conditions green when a particular condition is met.


JS LOGIC

- When the user clicks on the password field, show the message box
	myInput.onfocus = function() {}
- When the user clicks outside of the password field, hide the message box
-  When the user starts to type something inside the password field: 
	Validate lowercase letters
	Validate capital letters
	Validate numbers
	Validate length

Each condition is tracked with variable. If that variable passes the condition

	myInput.onkeyup = function() {}

  let lowerCaseLetters = /[a-z]/g;
  if(myInput.value.match(lowerCaseLetters)) {
    msgCondition.classList.remove("invalid");
    msgCondition.classList.add("valid");
  } else {
    msgCondition.classList.remove("valid");
    msgCondition.classList.add("invalid");

SEE CODEPEN FOR FULL EXAMPLE

######################
IV.	BASIC CONDITIONS
######################

- min. one lowercase letter
- min. one uppercase letter
- min. one number
- min. 8 characters

- field should not be submitted empty: if(input.value= ""){}