###################
SELECT ALL SIBLINGS
###################


//  helper function to get all siblings of an element

const getSiblings = (elem) => {
  	let siblings = [];
	let sibling = elem.parentNode.firstChild;
  
 	while (sibling) {
		if (sibling.nodeType === 1 && sibling !== elem) {
			siblings.push(sibling);
		}
   	 	sibling = sibling.nextSibling;
	}
	
	return siblings;
}

Get the parent of the element who’s siblings we want to find.

Get the first element inside that parent element.

Push the first element to an array of siblings.

***Get the next sibling element of the first element. Thus the while loop goes on as long as there is a nextSibling found.

	<ul>
		<li>	= firstChild
		<li>	= sibling.nextSibling
		<li> 	= element to start with

Repeat steps 3 and 4 until there are no sibling elements left. 

Skip step 3 if the “sibling” is the original element, though.

Important: you only want ELEMENT NODES, not other node types such as text_node. The value of the nodeType=1 referes to element nodes.

NOTE: you can simply the if statement if you know that you only want to work with ELEMENT NODES:

	sibling = elem.parentNode.firstElementChild;
	
	sibling = sibling.nextElementSibling;

