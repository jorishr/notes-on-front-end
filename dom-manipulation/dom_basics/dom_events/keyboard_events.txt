###############
KEYBOARD EVENTS
###############

Keyboard events should be used when we want to handle keyboard actions.

The keydown events happens when a key is pressed down, and then keyup – when it’s released.

NOTE:
If we want to track any input into an <input> field, then keyboard events are not enough. There’s another event named input to track changes of an <input> field, by any means. And it may be a better choice for such task. 

event.key vs event.code
The key property of the event object allows to get the character, while the code property of the event object allows to get the “physical key code”.

KEY		EVENT.KEY		EVENT.CODE
Z		z (lowercase)	KeyZ
Shift+Z	Z (uppercase)	KeyZ

Do we want to handle layout-dependant keys? Then event.key is the way to go.

Or we want a hotkey to work even after a language switch? Then event.code may be better.

############
OTHER EVENTS
############

change	
//-> A value was changed. For text inputs triggers on focus loss.

input	
//-> For text inputs on every change.	Triggers immediately unlike change.

cut/copy/paste	
//-> Cut/copy/paste actions. 

The action can be prevented. The event.clipboardData property gives read/write access to the clipboard.