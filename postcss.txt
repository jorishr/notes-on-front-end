I.	ABOUT
II.	INSTALL


I.	ABOUT POSTCSS

It can be configured as a JS and CSS bundler, similar to how webpack works. It allows you to split up your CSS code into modules and compiles it all into a single .css file. It also allows support for scss features such nesting, imports and variables. 

https://medium.com/@im.simonecorsi/moving-from-sass-to-postcss-why-what-and-how-f68b1bc760dc

Another feature of POSTCSS is POLYFILLS. Polyfills are JS backups for features that the browser does not support, as the js builts the css feature for the browser.


II.	INSTALL

npm install gulp-postcss

.pipe(postcss([array of things to do]))

ADD SUPPORT FOR:
- autoprefixing
- variables
- nesting
- imports

npm install postcss-simple-vars postcss-nested postcss-import postcss-mixins --save-dev

Add each package to postcss array.

IMPORTANT: The order in the array matters!

	[cssImport, mixins, cssVars, cssNested, autoprefixer]


III.	IMPORTS, MIXINS, VARIABLES, NESTING

All PostCSS extensions add functionality for CSS.

Packages such as Normalize and jquery are dependecies installed via NodeJS. Postcss will find them when you simple import normalize.css in the styles.css. Without the cssImport you have to specificy the path manually.




