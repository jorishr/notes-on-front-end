##############################
COLLAPSIBLE CONTENT: ACCORDION
##############################

#################
I.	HTML MARKUP
#################

Basically you have large buttons, that when clicked show the hidden content below each button.

<button class="accordion">Section 1</button>
<div class="panel">
  <p>Lorem ipsum...</p>
</div>

<button class="accordion">Section 2</button>
<div class="panel">
  <p>Lorem ipsum...</p>
</div>

<button class="accordion">Section 3</button>
<div class="panel">
  <p>Lorem ipsum...</p>
</div>

############
II.	CSS/JS
############

The changes are made with JS through an eventListener.

- the panel with the content is hidden by default

	.panel { display: none;}

- add a different background color to the button that is clicked on, through an .active class. This color change can be the same as the :hover changes.

.active, 
.accordion:hover {
  background-color: #ccc;
}

- loop over all the array of accordion buttons and 1) add an eventListener; 2) toggle the active class on the btn; 3) set the display property of the CORRESPONDING panel to block. The corresponding panel is identified as the nextElementSibling in the html markup.

	const btns = document.querySelector('.accordion');
	for(let i=0; i < btns.length; i++){
		btns[i].addEventListener('click', () => {
			this.classList.toggle('active');
			let panel = this.nextElementSibling;
			if (panel.style.display === "block") {							panel.style.display = "none";} else {
      			panel.style.display = "block";
    			}
		});
	}

################
III.	ANIMATIONS
################

To make the transition smoother you can work with the opacity or trnasition the max-height property.

To add a changing +/- sign to the button use a pseudo-element.

.accordion::after {
  content: '\02795'; /* Unicode character for "plus" sign (+) */
  font-size: 13px;
  color: #777;
  float: right;
  margin-left: 5px;
}

.active::after {
  content: "\2796"; /* Unicode character for "minus" sign (-) */
}
